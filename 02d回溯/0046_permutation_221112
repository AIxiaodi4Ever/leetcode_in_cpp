class Solution {
public:
    void backtrack(vector<vector<int>>& rets, vector<int>& nums, int first, int len) {
        if (first == len) {
            rets.push_back(nums);
            return;
        }
        for (int i = first; i < len; ++i) {
            swap(nums[i], nums[first]);
            backtrack(rets, nums, first + 1, len);
            swap(nums[i], nums[first]);
        }
    }

    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> rets;
        backtrack(rets, nums, 0, nums.size());
        return rets;
    }
};